input Order_Products {
    quantity: Int!
    productId: Int!
}

type Order_Product {
    id: Int
    orderId: Int
    quantity: Int
    productId: Int
}

type ProductQuery {
    id: Int
    orderId: Int
    quantity: Int
    productId: Int
    product: Product
}

type Order {
    id: Int!
    total: Float
    variant: String
    products: [ProductQuery]
    customer: Customer
    invoice: Invoice
    state: State
    createdAt: String
    updatedAt: String
}

input CreateOrderInput {
    stateId: Int!
    invoice: String
    variant: String!
    products: [Order_Products!]
    customerId: Int!
}

input UpdateOrderInput {
    id: Int!
    stateId: Int!
    invoice: String
    variant: String!
    products: [Order_Products!]
    customerId: Int!
}

type Query {
    orders: [Order]!
    order(id: Int!): Order
}

type Mutation {
    createOrder(createOrderInput: CreateOrderInput!): Order!
    updateOrder(updateOrderInput: UpdateOrderInput!): Order!
    removeOrder(id: Int!): Boolean!
}
